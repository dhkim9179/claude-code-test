spring.application.name=demo

# Spring Batch Configuration
# 배치 Job이 자동으로 실행되지 않도록 설정 (Job을 수동으로 실행하려면 이 옵션 필요)
spring.batch.job.enabled=false

# H2 Database Configuration (메타데이터 저장용)
# Spring Batch는 Job 실행 이력을 데이터베이스에 저장합니다
spring.datasource.url=jdbc:h2:mem:batchdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console 활성화 (개발 중 배치 메타데이터 확인용)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Spring Batch 스키마 자동 생성
spring.batch.jdbc.initialize-schema=always

# 애플리케이션 스키마 초기화 설정
# schema.sql 파일을 자동으로 실행하여 테이블 생성
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.encoding=UTF-8

# MyBatis Configuration
# MyBatis XML Mapper 파일 위치 지정
mybatis.mapper-locations=classpath:mybatis/mapper/**/*.xml
# 도메인 객체 패키지 별칭 설정 (XML에서 전체 패키지명 대신 클래스명만 사용 가능)
mybatis.type-aliases-package=com.example.demo.domain
# 카멜케이스 자동 매핑 (DB의 snake_case를 Java의 camelCase로 자동 변환)
mybatis.configuration.map-underscore-to-camel-case=true
# SQL 로그 출력 설정
mybatis.configuration.log-impl=org.apache.ibatis.logging.slf4j.Slf4jImpl

# Scheduling Configuration
# 스케줄러 활성화 설정
spring.task.scheduling.enabled=true
# 스케줄러 스레드 풀 크기
spring.task.scheduling.pool.size=5
